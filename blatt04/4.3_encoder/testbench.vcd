$date
  Wed Nov  9 14:12:20 2022
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module encoder42_tb $end
$var reg 4 ! i[3:0] $end
$var reg 2 " y[1:0] $end
$scope module encoder $end
$var reg 4 # i[3:0] $end
$var reg 2 $ y[1:0] $end
$var reg 1 % wire1 $end
$var reg 1 & wire2 $end
$scope module or1 $end
$var reg 1 ' input1 $end
$var reg 1 ( input2 $end
$var reg 1 ) or_result $end
$var reg 1 * or_gate $end
$upscope $end
$scope module not1 $end
$var reg 1 + input1 $end
$var reg 1 , not_output $end
$var reg 1 - notgate $end
$upscope $end
$scope module and1 $end
$var reg 1 . input1 $end
$var reg 1 / input2 $end
$var reg 1 0 and_result $end
$var reg 1 1 and_gate $end
$upscope $end
$scope module or2 $end
$var reg 1 2 input1 $end
$var reg 1 3 input2 $end
$var reg 1 4 or_result $end
$var reg 1 5 or_gate $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0001 !
b0U "
b0001 #
b0U $
1%
U&
0'
U(
U)
U*
0+
1,
1-
1.
0/
U0
01
02
03
04
05
#10000000
b0011 !
b0011 #
1/
11
#15000000
b00 "
b00 $
0&
0(
0)
0*
00
#20000000
b0111 !
b10 "
b0111 #
b10 $
0%
1+
0,
0-
0.
01
13
14
15
#25000000
b11 "
b11 $
1&
1(
1)
1*
10
#30000000
b1111 !
b1111 #
1'
12
#35000000
0&
0(
00
#40000000
